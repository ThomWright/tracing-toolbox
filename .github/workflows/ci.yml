name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  msrv: 1.64.0
  nightly: nightly-2022-09-22

jobs:
  build-msrv:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-msrv-cargo-build-target

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.msrv }}
          override: true

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --all-targets
      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --doc

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Clippy: all features"
          args: --workspace --all-features --all-targets -- -D warnings
      - name: Clippy tunnel (features=sender)
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Clippy: tunnel (features=sender)"
          args: -p tracing-tunnel --features sender --all-targets -- -D warnings
      - name: Clippy tunnel (features=receiver)
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Clippy: tunnel (features=receiver)"
          args: -p tracing-tunnel --features receiver --all-targets -- -D warnings

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --all-targets
      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --doc

  build-nightly:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-nightly-cargo-build-target

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.nightly }}
          target: thumbv7m-none-eabi
          override: true
          profile: minimal

      - name: Build tunnel
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p tracing-tunnel --lib --no-default-features --features sender --target thumbv7m-none-eabi -Z avoid-dev-deps
      - name: Build capture
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p tracing-capture --lib --no-default-features -Z avoid-dev-deps

  document:
    if: github.event_name == 'push'
    needs:
      - build
      - build-msrv
      - build-nightly
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-document-target

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.nightly }}
          profile: minimal
          override: true

      - name: Build docs
        run: |
          cargo clean --doc && \
          cargo rustdoc -p tracing-tunnel --all-features -- --cfg docsrs && \
          cargo rustdoc -p tracing-capture --all-features -- --cfg docsrs

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: target/doc
          single-commit: true
